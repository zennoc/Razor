#!/bin/sh
# preinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    install)
        # Only apply this rule if we are a first-time install - if there was
        # no old version installed before we started.
        if test x"$2" = x""; then
            if test -d "/opt/razor/.git"; then
                echo "As a transitional measure, the Puppet Razor packages" >&2
                echo "will not install if /opt/razor/.git exists as a directory." >&2
                echo "" >&2
                echo "This is to avoid breaking potentially custom installations" >&2
                echo "that predate any install method other than git(1) clones." >&2
                echo "" >&2
                echo "Please move the older install out of the way before you" >&2
                echo "try to install this package again, and sorry for the" >&2
                echo "inconvenience this doubtless causes you." >&2
                echo "" >&2
                echo "This check only applies on the *first* installation of" >&2
                echo "the new packages.  Upgrades will work fine even if the" >&2
                echo "git directory is present." >&2
                exit 1
            fi
        fi
        ;;

    upgrade)
        ;;

    abort-upgrade)
        ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
